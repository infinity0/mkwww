:root {
  /** Layout */
  --sidebar-width: 16em;
  --min-main-width: 24em;
  --max-body-width: 72em;
  --navswitch-width: 4em;
  --navswitch-height: 3ex;
  --footer-max-height: 5ex; /* max height the footer is expected to wrap to */

  /** Appearance */
  --spacer-padding-vertical: 0.5em;
  --spacer-padding-horizontal: 1em;
  --content-padding-default: 1em;
}

/** Layout */

* {
  /* give some context when scrolling to / opening at anchors */
  scroll-margin-block-start: 16.67vh;
}

/* hack #1:
 * this is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1803783
 * our (non-negotiable) use of min-width for <main> triggers the bug, and makes
 * the navbar unsticky on mobile browsers in certain situations.
 */
html {
  /* hack #1, make position: fixed/sticky work properly on mobile */
  overflow: auto;
  /* hack #1, body is effectively our viewport, expand to fill and remove extra spaces */
  /* push footer to bottom of page */
  /* don't use 100vh here, it causes problems on mobile which implement a dynamic viewport */
  height: 100%;
}

body {
  /* hack #1, make position: fixed/sticky work properly on mobile */
  overflow: auto;
  /* hack #1, body is effectively our viewport, expand to fill and remove extra spaces */
  /* push footer to bottom of page */
  /* don't use 100vh here, it causes problems on mobile which implement a dynamic viewport */
  height: 100%;
  /* hack #1, avoids extra scrollbars on html */
  margin: 0;
  padding: 0;
}

#middle {
  /* push footer to bottom of page */
  /* don't use 100vh here, it causes problems on mobile which implement a dynamic viewport */
  min-height: calc(100% - var(--footer-max-height));
  /* center in html/viewport */
  margin: auto;
  max-width: var(--max-body-width);
  display: flex;
}

#sitenav {
  position: relative;
  /* make sure navswitch is always clickable */
  z-index: 25;
  /* hack #1: rule out one possibility of the bug, a too-small parent container */
  height: inherit;
}

main {
  position: relative;
  min-width: var(--min-main-width);
  /* fill the page, up to body max-width */
  width: 100%;
  z-index: 0;
}

#sitenav .navbar {
  position: sticky;
  top: 0;
  /* make sure navswitch is always visible */
  min-height: var(--navswitch-width);
  min-width: var(--navswitch-height);
  /* don't expand more than 1 viewport, scroll instead */
  max-height: 100vh;
  overflow: auto;
  /* take up less space when closed */
  margin-right: calc(0px - var(--navswitch-height));
}
#sitenav .navbar[open] {
  /* default margin when open */
  margin-right: 0;
}

#sitenav .navswitch {
  position: absolute;
  right: 0;
  top: var(--navswitch-width);
  width: var(--navswitch-width);
  height: var(--navswitch-height);
  transform: rotate(90deg);
  transform-origin: right top;
}

#sitenav nav {
  width: var(--sidebar-width);
}

/** Appearance */

body {
  font-family: "Noto Sans", "Liberation Sans", sans-serif;
}

/* Chrome doesn't support lang-commas yet */
:is(:lang(zh-Hans), :lang(zh-CN)) > body {
  font-family: "Noto Sans", "Noto Sans CJK SC", "Liberation Sans", sans-serif;
}

/* Chrome doesn't support lang-commas yet */
:is(:lang(zh-Hant), :lang(zh-TW), :lang(zh-HK)) > body {
  font-family: "Noto Sans", "Noto Sans CJK TC", "Liberation Sans", sans-serif;
}

main, #sitenav nav {
  padding: var(--content-padding-default);
}

.footnote {
  font-size: smaller;
  opacity: 0.75;
}

footer {
  text-align: center;
  font-size: smaller;
  padding: var(--spacer-padding-vertical) var(--content-padding-default);
}

#sitenav .navbar .navswitch:before { content: "â–²"; }
#sitenav .navbar .navswitch:after  { content: "â–²"; }
#sitenav .navbar[open] .navswitch:before { content: "â–¼"; }
#sitenav .navbar[open] .navswitch:after  { content: "â–¼"; }
#sitenav .navswitch {
  /* remove list-item bullet-point */
  display: inline-block;
  margin-top: var(--spacer-padding-vertical);
  text-align: center;
  line-height: calc(var(--navswitch-height) - 0.7ex);
  font-size: smaller;
  border: 1px solid color-mix(in srgb, var(--CanvasText) 25%, transparent);
  cursor: pointer;
}

#sitenav nav .sitemap {
  padding-inline-start: var(--spacer-padding-horizontal);
  list-style: "â€¢ " outside;
}

a.self-link {
  color: inherit;
  text-decoration: inherit;
}

:is(:target, :target>*):is([role="heading"], h1, h2, h3, h4, h5, h6)::before {
  position: absolute;
  right: -1em;
  content: "ðŸ ˜";
}

:is(:target, :target>*):is([role="heading"], h1, h2, h3, h4, h5, h6, p[id], aside[id]) {
  background-color: color-mix(in srgb, var(--AccentColor) 50%, transparent);
  &:is(h1, h2, h3, h4, h5, h6) {
    /* have the above background-color bleed out a little bit */
    margin-inline-start: -1.6ex;
    padding-inline-start: 1.6ex;
  }
}
