#!/bin/sh
# Parse an asciidoctor fragment into a main-like HTML fragment.
#
# Usage: $0 <context-filepath> <input-filepath> [<id-prefix>] < <input-filehandle>
#
# context-filepath
#   JSON context/config dictionary. Keys we use:
#
#   (none currently)
#
# input-filepath
#   Path to the input source file. This is used for metadata purposes ONLY.
#   The actual file is not read directly; instead we expect either the whole
#   file or a portion of it to be passed via stdin. This allows us to support
#   (e.g.) *.j2 templates that call us selectively for portions of itself.
#
# id_prefix
#   Passed directly to asciidoctor.

DIR="$(mktemp -d)"
cleanup() { rm -rf "$DIR"; }
trap 'cleanup; trap - EXIT;' EXIT HUP INT QUIT PIPE TERM
mkfifo "$DIR/pipe1"
mkfifo "$DIR/pipe2"

# asciidoctor treats the level-0 heading in a special way
# we don't like that and it's inconsistent with other document formats, so we
# do a conjugation-like (group theory gag^-1) trick

fwd() {
  # in adoc, convert the first level-0 heading into a level-1 heading
  sed -r -e '0,/^= (.*)/s//== \1/w '"$DIR/pipe1"
}

rev() {
  read x < "$DIR/pipe1"
  printf "%s" "$x" > "$DIR/pipe2"
  if [ -z "$x" ]; then
    cat
  else
    # if fwd applied then
    # in html, convert the first level-1 heading into a level-0 heading
    conj=true
    sed -r \
      -e '0,/div class="sect1"/s//div class="sect0"/' \
      -e '0,/<h2(.*)<\/h2>/s//<h1\1<\/h1>/'
  fi
}

if gem list --silent -i -v ">= 0.1003" '^asciidoctor-mathematical$'; then
  args="$args -a stem -r asciidoctor-mathematical -a mathematical-format=mathml -a mathematical-inline=true"
fi

ctxfile="$1" # TODO: read extra args from this file, document this & the docutils version too
infile="$2"
tocfile="$3"
idprefix="$4"
cancellink='<a class="anchor-cancel" href="#" title="Cancel anchor target"></a>'

# set idprefix from parameter
# set idseparator to be more consistent with docutils
fwd | \
asciidoctor -a sectanchors -a idprefix="${idprefix:+${idprefix}_}" -a idseparator=- \
  -a toc=auto -a toc-title=Contents $args -s -o - - | \
rev | \
sed -e 's/class="sect/class="main-asciidoc sect/g' \
  -e 's;<a class="anchor";'"${cancellink}"'<a class="anchor";g' | \
{
read conj < "$DIR/pipe2"
python -c '
from mkwww import html
import sys
main = sys.stdin.read()
def postproc(n):
  for el in n.select("""*[id$="toctitle"]"""):
    html.el_lstrip(el.next_sibling)
    el.extract()
  # due to our conjugation-like hack, the level-0 heading is the first element in the toctree
  # extract it and put it in the proper place
  if sys.argv[2]:
    el = n.select_one("""ul > li:first-child""")
    html.el_lstrip(el.next_sibling)
    el.extract()
    n.insert(0, el)
    el.unwrap()
  return n
main, toc = html.extract_raw(main, """[id$="toc"]:has([id$="toctitle"])""", postproc=postproc)
with open(sys.argv[1], "w") as wfp:
  wfp.write("".join(str(x) for x in toc))
sys.stdout.write(str(main))
' "$tocfile" "$conj"
}